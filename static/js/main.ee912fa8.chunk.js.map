{"version":3,"sources":["Components/Dropdown.js","Components/CurrencyCard/CurrencyCard.js","Actions/action.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","options","setCurrency","className","defaultItem","data","onChange","e","value","CurrencyCard","handleChange","label","currencyList","update","isReadOnly","type","readOnly","getCurrencyList","a","setLoading","updateCurrency","fetch","response","json","i","tmpCurrencyList","results","push","getCurrencyValue","to","from","Object","values","App","useState","fromCurrency","updateFrom","toCurrency","updateTo","currencyValue","setCurrencyValue","input","setInput","output","setOutput","loading","useEffect","calc","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee912fa8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\r\n\r\nconst Dropdown = ({ options, setCurrency }) => {\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <DropDownList\r\n        defaultItem={options[0]}\r\n        data={options}\r\n        onChange={(e) => setCurrency(e.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport Dropdown from \"../Dropdown\";\r\nimport \"./CurrencyCard.css\";\r\nconst CurrencyCard = ({\r\n  handleChange,\r\n  value,\r\n  label,\r\n  currencyList,\r\n  update,\r\n  isReadOnly,\r\n}) => {\r\n  return (\r\n    <div className=\"currency-card\">\r\n      <h4>{label}</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={value}\r\n        readOnly={isReadOnly}\r\n      />\r\n      <div className=\"dropdown\">\r\n        <Dropdown options={currencyList} setCurrency={update} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyCard;\r\n","export const getCurrencyList = async ({ setLoading, updateCurrency }) => {\r\n  try {\r\n    setLoading(true);\r\n    const response = await fetch(\r\n      \"https://free.currconv.com/api/v7/currencies?apiKey=053542bbdf05e8579345\"\r\n    );\r\n    const data = await response.json();\r\n    setLoading(false);\r\n    let tmpCurrencyList = [];\r\n    for (const i in data.results) tmpCurrencyList.push(i);\r\n    updateCurrency(tmpCurrencyList);\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\nexport const getCurrencyValue = async ({ update, to, from }) => {\r\n  const response = await fetch(\r\n    `https://free.currconv.com/api/v7/convert?apiKey=053542bbdf05e8579345&q=${from}_${to}&compact=ultra`\r\n  );\r\n  const data = await response.json();\r\n  update(Object.values(data)[0]);\r\n};\r\n\r\nexport const convertCurrency = ({ calc, input, value }) => {\r\n  calc(input * value);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport CurrencyCard from \"./Components/CurrencyCard/CurrencyCard\";\nimport {\n  getCurrencyList,\n  getCurrencyValue,\n  convertCurrency,\n} from \"./Actions/action\";\nimport \"./App.css\";\nimport \"@progress/kendo-theme-default/dist/all.css\";\n\nconst App = () => {\n  const [currencyList, updateCurrency] = useState([]);\n  const [fromCurrency, updateFrom] = useState(\"ALL\");\n  const [toCurrency, updateTo] = useState(\"ALL\");\n  const [currencyValue, setCurrencyValue] = useState(0);\n  const [input, setInput] = useState(0);\n  const [output, setOutput] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getCurrencyList({ setLoading: setLoading, updateCurrency: updateCurrency });\n  }, []);\n\n  useEffect(() => {\n    getCurrencyValue({\n      update: setCurrencyValue,\n      from: fromCurrency,\n      to: toCurrency,\n    });\n  }, [fromCurrency, toCurrency]);\n\n  useEffect(() => {\n    convertCurrency({ calc: setOutput, input: input, value: currencyValue });\n  }, [fromCurrency, toCurrency, input, currencyValue]);\n\n  const handleChange = (event) => setInput(event.target.value);\n\n  return (\n    <div className=\"App\">\n      <h1>Currency Converter</h1>\n      {loading ? (\n        <h3>Loading...</h3>\n      ) : (\n        <div className=\"currency-input\">\n          <CurrencyCard\n            label=\"From\"\n            value={input}\n            currencyList={currencyList}\n            update={updateFrom}\n            isReadOnly={false}\n            handleChange={handleChange}\n          />\n          <CurrencyCard\n            label=\"To\"\n            value={output}\n            currencyList={currencyList}\n            update={updateTo}\n            isReadOnly={true}\n            handleChange={handleChange}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}